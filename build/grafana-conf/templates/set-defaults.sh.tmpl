#!/usr/bin/env sh
# Unfortunately not everything in Grafana can be set using config values

# NOTE: Very quickly throwing this together
# We could get these values from rancher-metadata using confd
# Seems overkill for now
GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER:-admin}
GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin}
GF_DEFAULT_THEME=${GF_DEFAULT_THEME:-dark}
GF_DEFAULT_ORG=${GF_DEFAULT_ORG:-DEMO}

wait_for_grafana() {
  counter=0
  printf '%s %s %s: INFO waiting for Grafana to become available' \
      "$(date -u +"%Y-%m-%dT%H:%M:%SZ")" "$(hostname)" "$0[$$]"
  until curl --output /dev/null --silent --head --fail \
  --user ${GF_SECURITY_ADMIN_USER}:${GF_SECURITY_ADMIN_PASSWORD} \
  http://grafana:3000; do
    printf '.'
    sleep 1
    counter=$((counter + 1))
    # Allow 3 mins to install all plugins
    if [ "$counter" -gt 180 ]; then
      echo
      echo "$(date -u +'%Y-%m-%dT%H:%M:%SZ') $(hostname) $0[$$]: ERROR " \
          "Grafana unavailable." >&2
      exit 1
    fi
  done
  echo
}

set_data_sources() {
  counter=0
  printf '%s %s %s: INFO ensuring Prometheus datasource configured in Grafana' \
      "$(date -u +"%Y-%m-%dT%H:%M:%SZ")" "$(hostname)" "$0[$$]"
  until curl --output /dev/null --silent --fail \
  --user ${GF_SECURITY_ADMIN_USER}:${GF_SECURITY_ADMIN_PASSWORD} \
  'http://grafana:3000/api/datasources' \
  -X POST \
  -H 'Content-Type: application/json;charset=UTF-8' \
  --data-binary \
  '{
      "name":"Prometheus",
      "type":"prometheus",
      "url":"http://prometheus:9090",
      "access":"proxy",
      "isDefault":true
  }' || [ $? = 22 ]; do
  printf '.'
  sleep 1
  counter=$((counter + 1))
  if [ "$counter" -gt 5 ]; then
      echo
      echo "$(date -u +'%Y-%m-%dT%H:%M:%SZ') $(hostname) $0[$$]: ERROR" \
      "failed to configure Prometheus data source in Grafana." >&2
      exit 1
  fi
  done
  echo
}

set_org_defaults() {
  counter=0
  printf '%s %s %s: INFO updating Grafana organisation defaults' \
      "$(date -u +"%Y-%m-%dT%H:%M:%SZ")" "$(hostname)" "$0[$$]"
  until curl --output /dev/null --silent --fail \
  --user ${GF_SECURITY_ADMIN_USER}:${GF_SECURITY_ADMIN_PASSWORD} \
  'http://grafana:3000/api/org' \
  -X PUT \
  -H 'Content-Type: application/json;charset=UTF-8' \
  --data-binary \
  '{
      "name":"'${GF_DEFAULT_ORG}'"
  }' && curl --output /dev/null --silent --fail \
  --user ${GF_SECURITY_ADMIN_USER}:${GF_SECURITY_ADMIN_PASSWORD} \
  'http://grafana:3000/api/org/preferences' \
  -X PUT \
  -H 'Content-Type: application/json;charset=UTF-8' \
  --data-binary \
  '{
      "theme":"'${GF_DEFAULT_THEME}'"
  }'; do
  printf '.'
  sleep 1
  counter=$((counter + 1))
  if [ "$counter" -gt 5 ]; then
      echo
      echo "$(date -u +'%Y-%m-%dT%H:%M:%SZ') $(hostname) $0[$$]: ERROR" \
      "failed to update Grafana organisation." >&2
      exit 1
  fi
  done
  echo
}

wait_for_grafana
set_data_sources
set_org_defaults
echo "$(date -u +'%Y-%m-%dT%H:%M:%SZ') $(hostname) $0[$$]: INFO done!"
